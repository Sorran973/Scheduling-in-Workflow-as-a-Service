from Parsing.CSVHandler import CSVHandler


class WorkflowSet:

    def __init__(self):
        self.workflows = []
        self.drawn_nodes = []
        self.drawn_edges = []


    def addWorkflow(self, workflow):
        self.workflows.append(workflow)


    def schedule(self):
        CSVHandler.write_headers()
        for workflow in self.workflows:
            workflow.schedule()
            self.drawn_nodes.append(workflow.drawn_nodes)
            self.drawn_edges.append(workflow.drawn_edges)
            CSVHandler.write_all_tables(workflow)

# test1_11.xml
#                             [72, 57, 73,  54,  60, 72, 60, 54, 67, 60, 62]
#                             [78, 58, 85,  68,  75, 79, 75, 54, 74, 67, 67]
#                             [82, 78, 90,  73,  84, 88, 84, 75, 80, 69, 68]
#                             [88, 87, 93,  82,  86, 90, 89, 86, 87, 69, 80]
#                             [90, 89, 94,  83,  92, 91, 93, 92, 89, 83, 84]
#                             [94, 89, 94,  88,  92, 92, 93, 92, 89, 85, 87]

# 300 [3.0, 2.7, 2.3, 2.0, 1.7] - [72.0, 60.0, 167.0, 300, 60.0, 128.0, 90.0, 102.0, 128.0, 72.0, 128.0]
# 300 [3.0, 2.7, 2.3, 2.0, 1.8] - [94.0, 100.0, 199.0, 300, 100.0, 96.0, 100.0, 94.0, 96.0, 94.0, 96.0]


#                              p0  p1   p2  p3   p4  p5  p6  p7  p8  p9  p10
# T = 214, average load max : [72, 75, 137, 214, 75, 72, 60, 57, 72, 72, 72]
# T = 214, time max :         [72, 75, 137, 214, 75, 72, 60, 57, 72, 72, 72]
# T = 214, average load min : [72, 60, 137, 214, 60, 72, 60, 72, 72, 72, 72]
# T = 214, time min :         [72, 60, 137, 214, 60, 72, 60, 72, 72, 72, 72]
# T = 214, cost max :         [72, 75, 137, 214, 75, 72, 60, 57, 72, 72, 72] [216.0, 145.0, 47.0, 44.0, 187.5, 216.0, 180.0, 135.0, 201.0, 103.5, 136.0]
# T = 214, cost min :         [72, 60, 137, 214, 60, 72, 60, 72, 72, 72, 72] [216.0, 145.0, 47.0, 44.0, 180.0, 216.0, 180.0, 135.0, 201.0, 103.5, 136.0]


#                              p0  p1   p2  p3   p4  p5   p6  p7  p8   p9  p10
# T = 250, average load max : [82, 75, 171, 250, 75, 74,  84, 91, 74,  82, 74]# T = 250, verage load min : [78, 84, 158, 250, 84, 87,  75, 69, 87,  78, 87]
# T = 250, time max :         [72, 75, 166, 250, 75, 79,  89, 86, 79,  72, 79]
# T = 250, time min :         [72, 60, 137, 250, 60, 108, 60, 72, 108, 72, 108]
# T = 250, cost max :         [72, 75, 161, 250, 75, 84,  84, 81, 84,  72, 84] [216.0, 145.0, 47.0, 44.0, 187.5, 197.5, 168.0, 150.0, 160.0, 103.5, 84.0]
# T = 250, cost min :         [88, 92, 153, 250, 92, 92,  60, 56, 92,  88, 92] [132.0, 44.5,  47.0, 44.0, 46.0,  46.0,  180.0, 135.0, 44.5,  42.5,  43.5]

#                              p0  p1   p2  p3   p4  p5   p6  p7  p8   p9  p1
# T = 300, average load max : [94, 92, 192, 300, 92, 103, 93, 95, 103, 94, 103]
# T = 300, average load min : [72, 60, 137, 300, 60, 158, 60, 72, 158, 72, 158]
# T = 300, time max :         [94, 92, 192, 300, 92, 103, 93, 95, 103, 94, 103]
# T = 300, time min :         [72, 60, 137, 300, 60, 158, 60, 72, 158, 72, 158]
# T = 300, cost max :         [72, 75, 223, 300, 75, 72, 146, 143, 72, 72, 72] [216.0, 145.0, 47.0, 44.0, 187.5, 216.0, 46.5, 46.0, 201.0, 103.5, 136.0]
# T = 300, cost min :         [94, 92, 192, 300, 92, 103, 93, 95, 103, 94, 103] [47.0, 44.5, 47.0, 44.0, 46.0, 46.0, 46.5, 46.0, 44.5, 42.5, 43.5]
